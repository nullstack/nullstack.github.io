{"instances":{"application":{"persistent":false},"Header/0-0-0-0":{"expanded":false,"persistent":false,"locale":"pt-BR","i18n":{"home":{"title":"Nullstack","href":"/pt-br"},"links":[{"title":"O que é Nullstack?","href":"/pt-br/o-que-e-nullstack"},{"title":"Documentação","href":"/pt-br/comecando"},{"title":"Exemplos","href":"/pt-br/exemplos"},{"title":"Contribuidores","href":"/pt-br/contribuidores"},{"title":"Waifu","href":"/pt-br/waifu"}],"menu":{"title":"Alternar Menu"},"action":{"title":"Começar","href":"/pt-br/comecando"},"search":{"title":"Buscar [ctrl + k]"},"language":{"title":"English","href":"/"},"mode":{"dark":"Modo Noite","light":"Modo Dia"}}},"Article/0-0-0-17/pt-br/funcoes-de-servidor":{"title":"Funções de Servidor","html":"<p>As funções do servidor são microsserviços especializados que no momento da transpilação são convertidos em pontos de entrada da API.<\\/p>\n<p>Para sinalizar uma função como uma função de servidor, você deve declará-la como <code>static async<\\/code>.<\\/p>\n<p>Ser uma função estática significa que ela não tem acesso ao escopo da instância.<\\/p>\n<p>No entanto, em vez de chamar a versão estática da <em>classe<\\/em>, você deve invocá-la como uma função de <em>instância<\\/em>.<\\/p>\n<p>As funções do servidor podem ser chamadas a qualquer momento em seu código e não estão limitadas a etapas de <a href=\"/pt-br/renderizando-no-servidor\">pré-processamento<\\/a>.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Component<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\">context<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    context<span class=\"token punctuation\">.<\\/span>count<span class=\"token operator\">++<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token keyword\">async<\\/span> <span class=\"token function\">handleClick<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">await<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Component<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>✨ Aprenda mais sobre <a href=\"/pt-br/contexto\">contexto<\\/a>.<\\/p>\n<\\/blockquote>\n<h2 id=\"comportamento-do-cliente\"><a href=\"#comportamento-do-cliente\">Comportamento do cliente<\\/a><\\/h2><p>Ao chamar uma função de servidor do cliente, os argumentos serão serializados como JSON.<\\/p>\n<p>Os argumentos serão postados contra a API gerada automaticamente e mesclados com o contexto do servidor quando atingir o servidor.<\\/p>\n<p>O valor de retorno da função do servidor será serializado de volta para o cliente e pode ser usado perfeitamente como se fosse uma função local.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Component<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\">context<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    context<span class=\"token punctuation\">.<\\/span>count<span class=\"token operator\">++<\\/span><span class=\"token punctuation\">;<\\/span>\n    <span class=\"token keyword\">return<\\/span> context<span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token keyword\">async<\\/span> <span class=\"token function\">handleClick<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Component<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"comportamento-do-servidor\"><a href=\"#comportamento-do-servidor\">Comportamento do servidor<\\/a><\\/h2><p>As funções de servidor serão usadas como funções locais, simplesmente criando um alias da chamada <em>instância<\\/em> para a <em>classe<\\/em> e mesclando os argumentos com o contexto do servidor.<\\/p>\n<h2 id=\"date-convenience\"><a href=\"#date-convenience\">Date Convenience<\\/a><\\/h2><p>As datas são serializadas como UTC em JSON e desserializadas de volta para objetos <code>Date<\\/code>.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Component<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token keyword\">async<\\/span> <span class=\"token function\">initiate<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">const<\\/span> date <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">new<\\/span> <span class=\"token class-name\">Date<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n    <span class=\"token keyword\">const<\\/span> verified <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">verifyDay<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">{<\\/span>date<span class=\"token punctuation\">}<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">verifyDay<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span>date<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> date<span class=\"token punctuation\">.<\\/span><span class=\"token function\">getDay<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token operator\">===<\\/span> <span class=\"token keyword\">new<\\/span> <span class=\"token class-name\">Date<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">getDay<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Component<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"fetch-convenience\"><a href=\"#fetch-convenience\">Fetch Convenience<\\/a><\\/h2><p><code>fetch<\\/code> está disponível em funções de servidor e cliente para fins de isomorfia.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Component<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n  <span class=\"token keyword\">async<\\/span> <span class=\"token function\">initiate<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">const<\\/span> url <span class=\"token operator\">=<\\/span> <span class=\"token string\">'https://api.github.com/repos/nullstack/nullstack/issues'<\\/span><span class=\"token punctuation\">;<\\/span>\n    <span class=\"token keyword\">const<\\/span> response <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> <span class=\"token function\">fetch<\\/span><span class=\"token punctuation\">(<\\/span>url<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>issues <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> response<span class=\"token punctuation\">.<\\/span><span class=\"token function\">json<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Component<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"importa--es-apenas-de-servidor\"><a href=\"#importa--es-apenas-de-servidor\">Importações apenas de servidor<\\/a><\\/h2><p>As dependências importadas que são usadas apenas dentro das funções do servidor serão excluídas do pacote do cliente.<\\/p>\n<p>Isso é útil para acessar módulos exclusivos do node.js e reduzir o tamanho do pacote do cliente por meio do pré-processamento de dados, como o markdown, sem ter que expor a dependência ao usuário final.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">import<\\/span> <span class=\"token punctuation\">{<\\/span>readFileSync<span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'fs'<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">import<\\/span> <span class=\"token punctuation\">{<\\/span>Remarkable<span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'remarkable'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Application<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">getTasks<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">const<\\/span> readme <span class=\"token operator\">=<\\/span> <span class=\"token function\">readFileSync<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token string\">'README.md'<\\/span><span class=\"token punctuation\">,<\\/span> <span class=\"token string\">'utf-8'<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token keyword\">new<\\/span> <span class=\"token class-name\">Remarkable<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span>readme<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Application<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"seguran-a\"><a href=\"#seguran-a\">Segurança<\\/a><\\/h2><p>Lembre-se de que cada função do servidor é semelhante a uma rota do Express na API, e deve ser codificada sem depender da lógica de exibição para a segurança.<\\/p>\n<blockquote>\n<p>🔒 As funções de servidor com o nome começando com &quot;start&quot; (e opcionalmente seguido por uma letra maiúscula) não geram um endpoint de API, para evitar inundação de contexto malicioso.<\\/p>\n<\\/blockquote>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Component<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">getCount<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span>request<span class=\"token punctuation\">,<\\/span> count<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">if<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token operator\">!<\\/span>request<span class=\"token punctuation\">.<\\/span>session<span class=\"token punctuation\">.<\\/span>user<span class=\"token punctuation\">)<\\/span> <span class=\"token keyword\">return<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span>\n    <span class=\"token keyword\">return<\\/span> count<span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Component<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>💡 As funções do servidor não são expostas ao cliente.<\\/p>\n<\\/blockquote>\n<blockquote>\n<p>✨ Aprenda mais sobre a <a href=\"/pt-br/extensao-de-arquivo-njs\">extensão de arquivo NJS<\\/a>.<\\/p>\n<\\/blockquote>\n<h2 id=\"palavras-reservadas\"><a href=\"#palavras-reservadas\">Palavras reservadas<\\/a><\\/h2><p>Os nomes das funções do servidor não podem colidir com os nomes dos métodos de instância da classe atual ou de suas classes pai.<\\/p>\n<p>As seguintes palavras não podem ser usadas em funções de servidor:<\\/p>\n<ul>\n<li><code>prepare<\\/code><\\/li>\n<li><code>initiate<\\/code><\\/li>\n<li><code>hydrate<\\/code><\\/li>\n<li><code>update<\\/code><\\/li>\n<li><code>terminate<\\/code><\\/li>\n<\\/ul>\n<p>As funções de servidor chamadas <code>start<\\/code> não irão gerar um endpoint de API e só podem ser chamadas por outras funções de servidor.<\\/p>\n<h2 id=\"prefixos-http-reservados\"><a href=\"#prefixos-http-reservados\">Prefixos HTTP reservados<\\/a><\\/h2><p>Funções de servidor declaradas com nomes começando com verbos HTTP serão executadas de acordo com o respectivo método HTTP.\nOs prefixos disponíveis são:<\\/p>\n<ul>\n<li><code>get<\\/code><\\/li>\n<li><code>post<\\/code><\\/li>\n<li><code>put<\\/code><\\/li>\n<li><code>patch<\\/code><\\/li>\n<li><code>delete<\\/code><\\/li>\n<\\/ul>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">\"nullstack\"<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">HTTPVerbs<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token comment\">// isso é uma requisição GET<\\/span>\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">getUserById<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> id <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// ...<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// isso é uma requisição POST<\\/span>\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">postUser<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> data <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// ...<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// isso é uma requisição PUT<\\/span>\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">putUserById<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> id<span class=\"token punctuation\">,<\\/span> data <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// ...<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// isso é uma requisição PATCH<\\/span>\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">patchUserById<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> id<span class=\"token punctuation\">,<\\/span> data <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// ...<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// isso é uma requisição DELETE<\\/span>\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">deleteUserById<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> id <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// ...<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> HTTPVerbs<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>💡 Funções de servidor sem nenhum prefixo especial serão por padrão requisições POST.<\\/p>\n<\\/blockquote>\n<blockquote>\n<p>🔥 Leve em consideração a especificação de cada método HTTP. Por exemplo, requisições GET possuem um limite de 2kb de dados que podem ser passados como parâmetro, então tentar enviar um objeto inteiro para uma função de servidor pode resultar em falha.<\\/p>\n<\\/blockquote>\n<h2 id=\"ressalvas\"><a href=\"#ressalvas\">Ressalvas<\\/a><\\/h2><p>Os endpoints de API gerados automaticamente não devem ser usados por aplicativos de terceiros.<\\/p>\n<p>A URL e a implementação podem mudar entre as versões do Nullstack.<\\/p>\n<blockquote>\n<p>✨ Se você deseja construir uma API, aprenda mais sobre <a href=\"/pt-br/requisicao-e-resposta-do-servidor\">como criar uma API com o Nullstack<\\/a>.<\\/p>\n<\\/blockquote>\n<h2 id=\"next-step\"><a href=\"#next-step\">Next step<\\/a><\\/h2><p>⚔ Saiba mais sobre o <a href=\"/pt-br/contexto\">contexto<\\/a>.<\\/p>\n","persistent":true,"locale":"pt-BR","i18n":{"lead":"Tem alguma pergunta ou sugestão?","cta":"Participe do nosso Discord","next":"Próximos passos","learn":"Aprenda sobre"},"description":"As funções do servidor são microsserviços especializados que no momento da transpilação são convertidos em pontos de entrada da API.","topics":[{"title":"Sobre o Nullstack","links":[{"title":"O que é Nullstack?","href":"/pt-br/o-que-e-nullstack"},{"title":"Começando","href":"/pt-br/comecando"}]},{"title":"Principais conceitos","links":[{"title":"Componentes sem estado","href":"/pt-br/componentes-renderizaveis"},{"title":"Componentes com estado","href":"/pt-br/componentes-com-estado"},{"title":"Ciclo de vida full stack","href":"/pt-br/ciclo-de-vida-full-stack"},{"title":"Funções de servidor","href":"/pt-br/funcoes-de-servidor"},{"title":"Contexto","href":"/pt-br/contexto"},{"title":"Vínculo bidirecional","href":"/pt-br/vinculo-bidirecional"},{"title":"Propriedades sublinhadas","href":"/pt-br/propriedades-sublinhadas"},{"title":"Refs","href":"/pt-br/refs"}]},{"title":"Chaves de contexto","links":[{"title":"Rotas e parâmetros","href":"/pt-br/rotas-e-parametros"},{"title":"Contexto data","href":"/pt-br/contexto-data"},{"title":"Contexto Instances","href":"/pt-br/contexto-instances"},{"title":"Contexto Environment","href":"/pt-br/contexto-environment"},{"title":"Contexto Page","href":"/pt-br/contexto-page"},{"title":"Contexto Project","href":"/pt-br/contexto-project"},{"title":"Contexto Settings","href":"/pt-br/contexto-settings"},{"title":"Contexto Secrets","href":"/pt-br/contexto-secrets"},{"title":"Requisição e resposta do servidor","href":"/pt-br/requisicao-e-resposta-do-servidor"},{"title":"Service Worker","href":"/pt-br/service-worker"}]},{"title":"Conceitos avançados","links":[{"title":"Inicialização da aplicação","href":"/pt-br/inicializacao-da-aplicacao"},{"title":"Componentes Funcionais","href":"/pt-br/componentes-funcionais"},{"title":"Componentes Persistentes","href":"/pt-br/componentes-persistentes"},{"title":"Estilos","href":"/pt-br/estilos"},{"title":"Extensão de arquivo NJS","href":"/pt-br/extensao-de-arquivo-njs"},{"title":"Como customizar o Webpack","href":"/pt-br/como-customizar-webpack"}]},{"title":"Modos de Construção","links":[{"title":"Renderizando no servidor","href":"/pt-br/renderizando-no-servidor"},{"title":"Geração de sites estáticos","href":"/pt-br/geracao-de-sites-estaticos"},{"title":"Single page applications","href":"/pt-br/aplicacao-de-pagina-unica"}]},{"title":"Outros","links":[{"title":"Nullstack Logo","href":"/pt-br/nullstack-logo"},{"title":"Como fazer deploy","href":"/pt-br/como-fazer-deploy-de-aplicacao-nullstack"}]}]},"GoogleAnalytics/0-0-0-19":{"persistent":false},"Loader/0-0-0-21":{"persistent":false},"Footer/0-0-0-22":{"persistent":false,"locale":"pt-BR","i18n":{"nullachan":{"alt":"Nulla-Chan","title":"Nulla-Chan: Waifu oficial do Nullstack"},"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}],"star":{"story":"Quer mostrar o seu amor e nos ajudar a espalhar a palavra?","action":"Deixe uma estrela no GitHub"}}}},"page":{"image":"/image-1200x630.png","status":200,"locale":"pt-BR","title":"Funções de Servidor - Nullstack","description":"As funções do servidor são microsserviços especializados que no momento da transpilação são convertidos em pontos de entrada da API."}}