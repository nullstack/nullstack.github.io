{"instances":{"application":{"persistent":false},"Header/0-0-0-0":{"expanded":false,"persistent":false,"locale":"pt-BR","i18n":{"home":{"title":"Nullstack","href":"/pt-br"},"links":[{"title":"O que √© Nullstack?","href":"/pt-br/o-que-e-nullstack"},{"title":"Documenta√ß√£o","href":"/pt-br/comecando"},{"title":"Exemplos","href":"/pt-br/exemplos"},{"title":"Contribuidores","href":"/pt-br/contribuidores"},{"title":"Waifu","href":"/pt-br/waifu"}],"menu":{"title":"Alternar Menu"},"action":{"title":"Come√ßar","href":"/pt-br/comecando"},"search":{"title":"Buscar [ctrl + k]"},"language":{"title":"English","href":"/"},"mode":{"dark":"Modo Noite","light":"Modo Dia"}}},"Article/0-0-0-17/pt-br/inicializacao-da-aplicacao":{"title":"Inicializa√ß√£o da Aplica√ß√£o","html":"<p>Os arquivos <strong>server.js<\\/strong>/<strong>client.js<\\/strong> na raiz da aplica√ß√£o s√£o respons√°veis por iniciar o aplicativo.<\\/p>\n<p>Quando voc√™ executa o aplicativo com <code>npm start<\\/code>, o m√©todo <code>Nullstack.start<\\/code> em ambos os arquivos iniciar√° seu componente principal e retornar√° o objeto <a href=\"/pt-br/contexto\"><code>context<\\/code><\\/a> de seus respectivos ambientes.<\\/p>\n<p>O <code>context<\\/code> retornado pode ser usado normalmente, e voc√™ pode definir seu m√©todo <code>start<\\/code> que executa apenas uma vez, sendo um bom lugar para configurar coisas, como seu banco de dados:<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">import<\\/span> Application <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'./src/Application'<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">import<\\/span> startDatabase <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'./database'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">const<\\/span> context <span class=\"token operator\">=<\\/span> Nullstack<span class=\"token punctuation\">.<\\/span><span class=\"token function\">start<\\/span><span class=\"token punctuation\">(<\\/span>Application<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n\ncontext<span class=\"token punctuation\">.<\\/span><span class=\"token function-variable function\">start<\\/span> <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token keyword\">function<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  context<span class=\"token punctuation\">.<\\/span>database <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> <span class=\"token function\">startDatabase<\\/span><span class=\"token punctuation\">(<\\/span>context<span class=\"token punctuation\">.<\\/span>secrets<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> context<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>üí° O <code>context.start<\\/code> no <strong>server.js<\\/strong> √© executado quando o aplicativo √© inicializado, e no <strong>client.js<\\/strong> assim que o navegador o carrega<\\/p>\n<\\/blockquote>\n<p>O <code>context<\\/code> pode ser modificado de qualquer forma, desde que seja exportado em ambos os arquivos, ao construir o aplicativo, o Nullstack o transforma em uma fun√ß√£o <em>serverless<\\/em> pronta para uso.<\\/p>\n<h2 id=\"padr-o-de-inicializa--o-de-depend-ncia\"><a href=\"#padr-o-de-inicializa--o-de-depend-ncia\">Padr√£o de inicializa√ß√£o de depend√™ncia<\\/a><\\/h2><p>Um bom padr√£o para trabalhar com depend√™ncias que requerem configura√ß√µes em tempo de inicializa√ß√£o √© definir uma fun√ß√£o <code>start<\\/code> na depend√™ncia:<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Dependency<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">start<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\">context<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// inicie algo usando o context<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Dependency<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<p>E cham√°-la em <code>context.start<\\/code> passando o <a href=\"/pt-br/contexto\">contexto<\\/a>:<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">import<\\/span> Application <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'./src/Application'<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">import<\\/span> Dependency <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'./src/Dependency'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">const<\\/span> context <span class=\"token operator\">=<\\/span> Nullstack<span class=\"token punctuation\">.<\\/span><span class=\"token function\">start<\\/span><span class=\"token punctuation\">(<\\/span>Application<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n\ncontext<span class=\"token punctuation\">.<\\/span><span class=\"token function-variable function\">start<\\/span> <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token keyword\">function<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token keyword\">await<\\/span> Dependency<span class=\"token punctuation\">.<\\/span><span class=\"token function\">start<\\/span><span class=\"token punctuation\">(<\\/span>context<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Application<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>üîí As fun√ß√µes de servidor com o nome come√ßando com &quot;start&quot; (e opcionalmente seguido por uma letra mai√∫scula) n√£o geram um endpoint de API para evitar inunda√ß√£o de contexto malicioso.<\\/p>\n<\\/blockquote>\n<h2 id=\"padr-o-executor-de-script\"><a href=\"#padr-o-executor-de-script\">Padr√£o executor de script<\\/a><\\/h2><p>Com este desacoplamento do <code>context<\\/code> do aplicativo, ap√≥s uma compila√ß√£o voc√™ pode acessar suas chaves executando um script de outro arquivo.<\\/p>\n<p>Veja um arquivo <strong>script.js<\\/strong> criado na raiz com dois exemplos manipulando at√© mesmo o <a href=\"/pt-br/contexto-project\"><code>project<\\/code><\\/a>, <a href=\"/pt-br/contexto-settings\"><code>settings<\\/code><\\/a> e o <a href=\"/pt-br/como-usar-mongodb-com-nullstack\">banco de dados MongoDB<\\/a> registrado abaixo:<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token comment\">// importe de .production se estiver em modo de produ√ß√£o<\\/span>\n<span class=\"token keyword\">const<\\/span> <span class=\"token punctuation\">{<\\/span> <span class=\"token keyword\">default<\\/span><span class=\"token operator\">:<\\/span> context <span class=\"token punctuation\">}<\\/span> <span class=\"token operator\">=<\\/span> <span class=\"token function\">require<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token string\">'./.development/server.js'<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token keyword\">const<\\/span> Faker <span class=\"token operator\">=<\\/span> <span class=\"token function\">require<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token string\">'faker'<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token comment\">// registra 5 usu√°rios falsos aleat√≥rios<\\/span>\n<span class=\"token keyword\">async<\\/span> <span class=\"token keyword\">function<\\/span> <span class=\"token function\">populateDB<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token keyword\">await<\\/span> context<span class=\"token punctuation\">.<\\/span><span class=\"token function\">start<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token keyword\">const<\\/span> <span class=\"token punctuation\">{<\\/span> database <span class=\"token punctuation\">}<\\/span> <span class=\"token operator\">=<\\/span> context<span class=\"token punctuation\">;<\\/span>\n  <span class=\"token keyword\">for<\\/span> <span class=\"token punctuation\">(<\\/span><span class=\"token keyword\">let<\\/span> id <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span> id <span class=\"token operator\">&lt;<\\/span> <span class=\"token number\">5<\\/span><span class=\"token punctuation\">;<\\/span> id<span class=\"token operator\">++<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">await<\\/span> database<span class=\"token punctuation\">.<\\/span><span class=\"token function\">collection<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token string\">'users'<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">insertOne<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">{<\\/span>\n      id<span class=\"token punctuation\">,<\\/span>\n      <span class=\"token literal-property property\">username<\\/span><span class=\"token operator\">:<\\/span> Faker<span class=\"token punctuation\">.<\\/span>name<span class=\"token punctuation\">.<\\/span><span class=\"token function\">firstName<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span>\n    <span class=\"token punctuation\">}<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  console<span class=\"token punctuation\">.<\\/span><span class=\"token function\">log<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token string\">'Usu√°rios registrados!'<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  process<span class=\"token punctuation\">.<\\/span><span class=\"token function\">exit<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token number\">0<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token comment\">// faz algo com base na contagem de usu√°rios<\\/span>\n<span class=\"token keyword\">async<\\/span> <span class=\"token keyword\">function<\\/span> <span class=\"token function\">countUsers<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token keyword\">await<\\/span> context<span class=\"token punctuation\">.<\\/span><span class=\"token function\">start<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token keyword\">const<\\/span> <span class=\"token punctuation\">{<\\/span> database<span class=\"token punctuation\">,<\\/span> project<span class=\"token punctuation\">,<\\/span> settings <span class=\"token punctuation\">}<\\/span> <span class=\"token operator\">=<\\/span> context<span class=\"token punctuation\">;<\\/span>\n  project<span class=\"token punctuation\">.<\\/span>name <span class=\"token operator\">=<\\/span> settings<span class=\"token punctuation\">.<\\/span>projectName<span class=\"token punctuation\">;<\\/span>\n\n  <span class=\"token keyword\">const<\\/span> count <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> database<span class=\"token punctuation\">.<\\/span><span class=\"token function\">collection<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token string\">'users'<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">count<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token keyword\">if<\\/span> <span class=\"token punctuation\">(<\\/span>count <span class=\"token operator\">><\\/span> <span class=\"token number\">100<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    console<span class=\"token punctuation\">.<\\/span><span class=\"token function\">log<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`<\\/span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<\\/span>project<span class=\"token punctuation\">.<\\/span>name<span class=\"token interpolation-punctuation punctuation\">}<\\/span><\\/span><span class=\"token string\"> tem mais de 100 usu√°rios registrados!<\\/span><span class=\"token template-punctuation string\">`<\\/span><\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">else<\\/span> <span class=\"token punctuation\">{<\\/span>\n    console<span class=\"token punctuation\">.<\\/span><span class=\"token function\">log<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`<\\/span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<\\/span>project<span class=\"token punctuation\">.<\\/span>name<span class=\"token interpolation-punctuation punctuation\">}<\\/span><\\/span><span class=\"token string\"> tem <\\/span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${<\\/span>count<span class=\"token interpolation-punctuation punctuation\">}<\\/span><\\/span><span class=\"token string\"> usu√°rios registrados!<\\/span><span class=\"token template-punctuation string\">`<\\/span><\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  process<span class=\"token punctuation\">.<\\/span><span class=\"token function\">exit<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token number\">0<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">const<\\/span> command <span class=\"token operator\">=<\\/span> process<span class=\"token punctuation\">.<\\/span>argv<span class=\"token punctuation\">.<\\/span><span class=\"token function\">splice<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token number\">2<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token comment\">// executado se passar o argumento 'populate'<\\/span>\n<span class=\"token keyword\">if<\\/span> <span class=\"token punctuation\">(<\\/span>command<span class=\"token punctuation\">[<\\/span><span class=\"token number\">0<\\/span><span class=\"token punctuation\">]<\\/span> <span class=\"token operator\">===<\\/span> <span class=\"token string\">'populate'<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token function\">populateDB<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">else<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token function\">countUsers<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n<\\/code><\\/pre>\n<p>Ent√£o, voc√™ pode execut√°-lo com um comando Node da seguinte maneira:<\\/p>\n<pre><code class=\"language-bash\"><span class=\"token operator\">><\\/span> node script<span class=\"token punctuation\">.<\\/span>js\nMeuProjeto tem <span class=\"token number\">49<\\/span> usu√°rios registrados<span class=\"token operator\">!<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>üí° Os executores de script s√£o √≥timos para muitas coisas, como popular um banco de dados em um ambiente espec√≠fico, testar comportamentos do <code>context<\\/code> e automatizar tarefas de aplicativos<\\/p>\n<\\/blockquote>\n<h2 id=\"pr-xima-etapa\"><a href=\"#pr-xima-etapa\">Pr√≥xima Etapa<\\/a><\\/h2><p>‚öî Aprenda sobre <a href=\"/pt-br/componentes-funcionais\">componentes funcionais<\\/a>.<\\/p>\n","persistent":true,"locale":"pt-BR","i18n":{"lead":"Tem alguma pergunta ou sugest√£o?","cta":"Participe do nosso Discord","next":"Pr√≥ximos passos","learn":"Aprenda sobre"},"description":"A fun√ß√£o start ser√° executada apenas uma vez quando sua aplica√ß√£o for carregada e √© um bom lugar para configurar seu contexto","topics":[{"title":"Sobre o Nullstack","links":[{"title":"O que √© Nullstack?","href":"/pt-br/o-que-e-nullstack"},{"title":"Come√ßando","href":"/pt-br/comecando"}]},{"title":"Principais conceitos","links":[{"title":"Componentes sem estado","href":"/pt-br/componentes-renderizaveis"},{"title":"Componentes com estado","href":"/pt-br/componentes-com-estado"},{"title":"Ciclo de vida full stack","href":"/pt-br/ciclo-de-vida-full-stack"},{"title":"Fun√ß√µes de servidor","href":"/pt-br/funcoes-de-servidor"},{"title":"Contexto","href":"/pt-br/contexto"},{"title":"V√≠nculo bidirecional","href":"/pt-br/vinculo-bidirecional"},{"title":"Propriedades sublinhadas","href":"/pt-br/propriedades-sublinhadas"},{"title":"Refs","href":"/pt-br/refs"}]},{"title":"Chaves de contexto","links":[{"title":"Rotas e par√¢metros","href":"/pt-br/rotas-e-parametros"},{"title":"Contexto data","href":"/pt-br/contexto-data"},{"title":"Contexto Instances","href":"/pt-br/contexto-instances"},{"title":"Contexto Environment","href":"/pt-br/contexto-environment"},{"title":"Contexto Page","href":"/pt-br/contexto-page"},{"title":"Contexto Project","href":"/pt-br/contexto-project"},{"title":"Contexto Settings","href":"/pt-br/contexto-settings"},{"title":"Contexto Secrets","href":"/pt-br/contexto-secrets"},{"title":"Requisi√ß√£o e resposta do servidor","href":"/pt-br/requisicao-e-resposta-do-servidor"},{"title":"Service Worker","href":"/pt-br/service-worker"}]},{"title":"Conceitos avan√ßados","links":[{"title":"Inicializa√ß√£o da aplica√ß√£o","href":"/pt-br/inicializacao-da-aplicacao"},{"title":"Componentes Funcionais","href":"/pt-br/componentes-funcionais"},{"title":"Componentes Persistentes","href":"/pt-br/componentes-persistentes"},{"title":"Estilos","href":"/pt-br/estilos"},{"title":"Extens√£o de arquivo NJS","href":"/pt-br/extensao-de-arquivo-njs"},{"title":"Como customizar o Webpack","href":"/pt-br/como-customizar-webpack"}]},{"title":"Modos de Constru√ß√£o","links":[{"title":"Renderizando no servidor","href":"/pt-br/renderizando-no-servidor"},{"title":"Gera√ß√£o de sites est√°ticos","href":"/pt-br/geracao-de-sites-estaticos"},{"title":"Single page applications","href":"/pt-br/aplicacao-de-pagina-unica"}]},{"title":"Outros","links":[{"title":"Nullstack Logo","href":"/pt-br/nullstack-logo"},{"title":"Como fazer deploy","href":"/pt-br/como-fazer-deploy-de-aplicacao-nullstack"}]}]},"GoogleAnalytics/0-0-0-19":{"persistent":false},"Loader/0-0-0-21":{"persistent":false},"Footer/0-0-0-22":{"persistent":false,"locale":"pt-BR","i18n":{"nullachan":{"alt":"Nulla-Chan","title":"Nulla-Chan: Waifu oficial do Nullstack"},"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}],"star":{"story":"Quer mostrar o seu amor e nos ajudar a espalhar a palavra?","action":"Deixe uma estrela no GitHub"}}}},"page":{"image":"/image-1200x630.png","status":200,"locale":"pt-BR","title":"Inicializa√ß√£o da Aplica√ß√£o - Nullstack","description":"A fun√ß√£o start ser√° executada apenas uma vez quando sua aplica√ß√£o for carregada e √© um bom lugar para configurar seu contexto"}}