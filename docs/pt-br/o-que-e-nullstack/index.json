{"instances":{"application":{"persistent":false},"Header/0-0-0-0":{"expanded":false,"persistent":false,"locale":"pt-BR","i18n":{"home":{"title":"Nullstack","href":"/pt-br"},"links":[{"title":"O que é Nullstack?","href":"/pt-br/o-que-e-nullstack"},{"title":"Documentação","href":"/pt-br/comecando"},{"title":"Exemplos","href":"/pt-br/exemplos"},{"title":"Contribuidores","href":"/pt-br/contribuidores"},{"title":"Waifu","href":"/pt-br/waifu"}],"menu":{"title":"Alternar Menu"},"action":{"title":"Começar","href":"/pt-br/comecando"},"search":{"title":"Buscar [ctrl + k]"},"language":{"title":"English","href":"/"},"mode":{"dark":"Modo Noite","light":"Modo Dia"}}},"Article/0-0-0-17/pt-br/o-que-e-nullstack":{"title":"O que é Nullstack?","html":"<p>O Nullstack é um framework full stack que permite que o frontend e o backend sejam criados em um único componente, nós o chamamos de componentes &quot;orientados a recursos&quot;. O Nullstack torna a codificação divertida e simples porque você não pensa em grandes arquiteturas, em vez disso, você possui pequenos recursos em componentes.<\\/p>\n<p>É mais fácil mostrar do que dizer: vamos repassar um componente que permite ver o número de curtidas de uma postagem em 5 minutos!<\\/p>\n<p>Na sua cabeça, você já está pensando em APIs e arquitetura, mas todos os seus usuários desejam ver as informações do banco de dados na tela, então vamos fazer exatamente isso:<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">LikeButton<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token comment\">// as variáveis de instância são mutáveis e reativas<\\/span>\n  <span class=\"token comment\">// você pode usar vanilla JS em vez de hooks<\\/span>\n  likes <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span>\n\n  <span class=\"token comment\">// funções \"static async\" rodam no servidor<\\/span>\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">getNumberOfLikes<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> database<span class=\"token punctuation\">,<\\/span> post <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// database é uma chave de contexto definida pelo usuário<\\/span>\n    <span class=\"token keyword\">const<\\/span> sql <span class=\"token operator\">=<\\/span> <span class=\"token string\">'SELECT COUNT(*) FROM likes WHERE post = ?'<\\/span>\n    <span class=\"token keyword\">const<\\/span> <span class=\"token punctuation\">[<\\/span>likes<span class=\"token punctuation\">]<\\/span> <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> database<span class=\"token punctuation\">.<\\/span><span class=\"token function\">query<\\/span><span class=\"token punctuation\">(<\\/span>sql<span class=\"token punctuation\">,<\\/span> <span class=\"token punctuation\">[<\\/span>post<span class=\"token punctuation\">]<\\/span><span class=\"token punctuation\">)<\\/span>\n    <span class=\"token keyword\">return<\\/span> likes\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token keyword\">async<\\/span> <span class=\"token function\">initiate<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> post <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// Você pode usar o valor retornado das funções do servidor<\\/span>\n    <span class=\"token comment\">// Como se fosse uma função regular<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>likes <span class=\"token operator\">=<\\/span> <span class=\"token keyword\">await<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">getNumberOfLikes<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">{<\\/span> post <span class=\"token punctuation\">}<\\/span><span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// JSX segue os padrões HTML<\\/span>\n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>div<\\/span> <span class=\"token attr-name\">class<\\/span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=<\\/span><span class=\"token punctuation\">\"<\\/span>likes-counter<span class=\"token punctuation\">\"<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>span<\\/span><span class=\"token punctuation\">><\\/span><\\/span> <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>likes<span class=\"token punctuation\">}<\\/span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>span<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n<\\/code><\\/pre>\n<p>Isso foi fácil, esse é um recurso, tudo no mais é um problema imaginário. Mas isso foi realmente muito fácil, e se quisermos escrever dados no banco de dados em vez de apenas ler na página carregar?<\\/p>\n<p>Vamos alterar esse span para um botão e verificar os critérios de aceitação do nosso recurso. A qualquer momento, você pode optar por executar funções no servidor e o Nullstack gerará no momento da compilação um microsserviço com uma API apenas para essa função.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">LikeButton<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n\n  <span class=\"token keyword\">static<\\/span> <span class=\"token keyword\">async<\\/span> <span class=\"token function\">createLike<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> request<span class=\"token punctuation\">,<\\/span> database<span class=\"token punctuation\">,<\\/span> post <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">const<\\/span> user <span class=\"token operator\">=<\\/span> request<span class=\"token punctuation\">.<\\/span>user<span class=\"token punctuation\">.<\\/span>id\n    <span class=\"token keyword\">const<\\/span> sql <span class=\"token operator\">=<\\/span> <span class=\"token string\">'INSERT INTO likes (user, post) VALUES (?, ?)'<\\/span>\n    <span class=\"token keyword\">await<\\/span> database<span class=\"token punctuation\">.<\\/span><span class=\"token function\">query<\\/span><span class=\"token punctuation\">(<\\/span>sql<span class=\"token punctuation\">,<\\/span> <span class=\"token punctuation\">[<\\/span>user<span class=\"token punctuation\">,<\\/span> post<span class=\"token punctuation\">]<\\/span><span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// Cada client function recebe as props<\\/span>\n  <span class=\"token keyword\">async<\\/span> <span class=\"token function\">like<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> post <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token comment\">// Você pode alterar as variáveis e o DOM reflete as mudanças<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>likes<span class=\"token operator\">++<\\/span>\n    <span class=\"token comment\">// Isso está chamando um ponto de extremidade da API por baixo dos panos<\\/span>\n    <span class=\"token keyword\">await<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span><span class=\"token function\">createLike<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">{<\\/span> post <span class=\"token punctuation\">}<\\/span><span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token comment\">// JSX segue os padrões HTML<\\/span>\n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>div<\\/span> <span class=\"token attr-name\">class<\\/span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=<\\/span><span class=\"token punctuation\">\"<\\/span>likes-counter<span class=\"token punctuation\">\"<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>like<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n          <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>likes<span class=\"token punctuation\">}<\\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n<\\/code><\\/pre>\n<p>Este exemplo é pequeno, mas mostra um pouco da beleza do NullStack. Todo recurso é apenas um componente e os recursos podem ser compostos como você deseja. Este componente pode entrar em um componente post.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">function<\\/span> <span class=\"token function\">Post<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> post <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>article<\\/span><span class=\"token punctuation\">><\\/span><\\/span> <span class=\"token punctuation\">{<\\/span>post<span class=\"token punctuation\">.<\\/span>content<span class=\"token punctuation\">}<\\/span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>article<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">LikeButton<\\/span><\\/span> <span class=\"token attr-name\">post<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span>post<span class=\"token punctuation\">.<\\/span>id<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n  <span class=\"token punctuation\">)<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n<\\/code><\\/pre>\n<p>Você pode até ter aplicativos inteiros como componentes dentro de outro aplicativo.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">function<\\/span> <span class=\"token function\">Application<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">Blog<\\/span><\\/span> <span class=\"token attr-name\">route<\\/span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=<\\/span><span class=\"token punctuation\">\"<\\/span>/blog/*<span class=\"token punctuation\">\"<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>dssxs<span class=\"token operator\">-<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">Ecommerce<\\/span><\\/span> <span class=\"token attr-name\">route<\\/span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=<\\/span><span class=\"token punctuation\">\"<\\/span>/shop/*<span class=\"token punctuation\">\"<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">Home<\\/span><\\/span> <span class=\"token attr-name\">route<\\/span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=<\\/span><span class=\"token punctuation\">\"<\\/span>/<span class=\"token punctuation\">\"<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n  <span class=\"token punctuation\">)<\\/span>\n<span class=\"token punctuation\">}<\\/span>\n<\\/code><\\/pre>\n<p>Qualquer desenvolvedor pode pular direto para o seu projeto com apenas conhecimento do JavaScript e ser produtivo no dia 0, porque não precisa entender uma arquitetura excessivamente complicada ou ter que lidar com um monólito gigante. Os aplicativos Nullstack são apenas pequenos recursos isolados que são divertidos de codificar.<\\/p>\n","persistent":true,"locale":"pt-BR","i18n":{"lead":"Tem alguma pergunta ou sugestão?","cta":"Participe do nosso Discord","next":"Próximos passos","learn":"Aprenda sobre"},"description":"O Nullstack é um framework full stack que permite que o frontend e o backend sejam criados em um único componente, nós o chamamos de componentes \"orientados a recursos\". O Nullstack torna a codificação divertida e simples porque você não pensa em grandes arquiteturas, em vez disso, você possui pequenos recursos em componentes.","topics":[{"title":"Sobre o Nullstack","links":[{"title":"O que é Nullstack?","href":"/pt-br/o-que-e-nullstack"},{"title":"Começando","href":"/pt-br/comecando"}]},{"title":"Principais conceitos","links":[{"title":"Componentes sem estado","href":"/pt-br/componentes-renderizaveis"},{"title":"Componentes com estado","href":"/pt-br/componentes-com-estado"},{"title":"Ciclo de vida full stack","href":"/pt-br/ciclo-de-vida-full-stack"},{"title":"Funções de servidor","href":"/pt-br/funcoes-de-servidor"},{"title":"Contexto","href":"/pt-br/contexto"},{"title":"Vínculo bidirecional","href":"/pt-br/vinculo-bidirecional"},{"title":"Propriedades sublinhadas","href":"/pt-br/propriedades-sublinhadas"},{"title":"Refs","href":"/pt-br/refs"}]},{"title":"Chaves de contexto","links":[{"title":"Rotas e parâmetros","href":"/pt-br/rotas-e-parametros"},{"title":"Contexto data","href":"/pt-br/contexto-data"},{"title":"Contexto Instances","href":"/pt-br/contexto-instances"},{"title":"Contexto Environment","href":"/pt-br/contexto-environment"},{"title":"Contexto Page","href":"/pt-br/contexto-page"},{"title":"Contexto Project","href":"/pt-br/contexto-project"},{"title":"Contexto Settings","href":"/pt-br/contexto-settings"},{"title":"Contexto Secrets","href":"/pt-br/contexto-secrets"},{"title":"Requisição e resposta do servidor","href":"/pt-br/requisicao-e-resposta-do-servidor"},{"title":"Service Worker","href":"/pt-br/service-worker"}]},{"title":"Conceitos avançados","links":[{"title":"Inicialização da aplicação","href":"/pt-br/inicializacao-da-aplicacao"},{"title":"Componentes Funcionais","href":"/pt-br/componentes-funcionais"},{"title":"Componentes Persistentes","href":"/pt-br/componentes-persistentes"},{"title":"Estilos","href":"/pt-br/estilos"},{"title":"Extensão de arquivo NJS","href":"/pt-br/extensao-de-arquivo-njs"},{"title":"Como customizar o Webpack","href":"/pt-br/como-customizar-webpack"}]},{"title":"Modos de Construção","links":[{"title":"Renderizando no servidor","href":"/pt-br/renderizando-no-servidor"},{"title":"Geração de sites estáticos","href":"/pt-br/geracao-de-sites-estaticos"},{"title":"Single page applications","href":"/pt-br/aplicacao-de-pagina-unica"}]},{"title":"Outros","links":[{"title":"Nullstack Logo","href":"/pt-br/nullstack-logo"},{"title":"Como fazer deploy","href":"/pt-br/como-fazer-deploy-de-aplicacao-nullstack"}]}]},"GoogleAnalytics/0-0-0-19":{"persistent":false},"Loader/0-0-0-21":{"persistent":false},"Footer/0-0-0-22":{"persistent":false,"locale":"pt-BR","i18n":{"nullachan":{"alt":"Nulla-Chan","title":"Nulla-Chan: Waifu oficial do Nullstack"},"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}],"star":{"story":"Quer mostrar o seu amor e nos ajudar a espalhar a palavra?","action":"Deixe uma estrela no GitHub"}}}},"page":{"image":"/image-1200x630.png","status":200,"locale":"pt-BR","title":"O que é Nullstack? - Nullstack","description":"O Nullstack é um framework full stack que permite que o frontend e o backend sejam criados em um único componente, nós o chamamos de componentes \"orientados a recursos\". O Nullstack torna a codificação divertida e simples porque você não pensa em grandes arquiteturas, em vez disso, você possui pequenos recursos em componentes."}}