{"instances":{"application":{"persistent":false},"Header/0-0-0-0":{"expanded":false,"persistent":false,"locale":"en-US","i18n":{"home":{"title":"Nullstack","href":"/"},"links":[{"title":"What is Nullstack?","href":"/what-is-nullstack"},{"title":"Documentation","href":"/getting-started"},{"title":"Examples","href":"/examples"},{"title":"Contributors","href":"/contributors"},{"title":"F.A.Q","href":"/frequently-asked-questions"},{"title":"Waifu","href":"/waifu"}],"menu":{"title":"Toggle Menu"},"action":{"title":"Get Started","href":"/getting-started"},"search":{"title":"Search [ctrl + k]"},"language":{"title":"PortuguÃªs","href":"/pt-br"},"mode":{"dark":"Night Mode","light":"Day Mode"}}},"Article/0-0-0-18/stateful-components":{"title":"Stateful Components","html":"<p>Stateful components are classes that extend nullstack and are able to hold state that reflects in the ui.<\\/p>\n<p>A productive full stack web framework should not force you to think about framework details.<\\/p>\n<p>Nullstack takes control of its subclasses and generates a proxy for each instance.<\\/p>\n<p>When you call anything on your class you are actually telling Nullstack what to do with the environment behind the scenes.<\\/p>\n<p>This allows you to use vanilla JavaScript operations like assigning to a variable and see the reflection in the dom.<\\/p>\n<h2 id=\"mutability\"><a href=\"#mutability\">Mutability<\\/a><\\/h2><p>You can mutate instance variables to update your application state.<\\/p>\n<p>Functions are automatically bound to the instance proxy and can be passed as a reference to events.<\\/p>\n<p>Events are declared like normal HTML attributes.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  count <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span>\n\n  <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token operator\">++<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>increment<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">}<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>ðŸ’¡ Updates are made in batches, usually while awaiting async calls, so making multiple assignments have no performance costs!<\\/p>\n<\\/blockquote>\n<h2 id=\"events-array\"><a href=\"#events-array\">Events array<\\/a><\\/h2><p>You can pass an array of events as prop and they will run in parallel<\\/p>\n<p>You can also pass falsy values to skip events conditionaly.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  count <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span>\n\n  <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token operator\">++<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token function\">log<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    console<span class=\"token punctuation\">.<\\/span><span class=\"token function\">log<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token function\">logUnlessZero<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    console<span class=\"token punctuation\">.<\\/span><span class=\"token function\">log<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count <span class=\"token operator\">><\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token punctuation\">[<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>increment<span class=\"token punctuation\">,<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>log<span class=\"token punctuation\">,<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count <span class=\"token operator\">><\\/span> <span class=\"token number\">0<\\/span> <span class=\"token operator\">&amp;&amp;<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>logUnlessZero<span class=\"token punctuation\">]<\\/span><span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">}<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"object-events\"><a href=\"#object-events\">Object Events<\\/a><\\/h2><p>You can shortcut events that are simple assignments by passing an object to the event.<\\/p>\n<p>Each key of the object will be assigned to the instance.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  count <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token literal-property property\">count<\\/span><span class=\"token operator\">:<\\/span> <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count <span class=\"token operator\">+<\\/span> <span class=\"token number\">1<\\/span><span class=\"token punctuation\">}<\\/span><span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">}<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"event-source\"><a href=\"#event-source\">Event Source<\\/a><\\/h2><p>By default, events refer to <code>this<\\/code> when you pass an object.<\\/p>\n<p>You can use the <code>source<\\/code> attribute to define which object will receive the assignments.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Paginator<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span>params<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">source<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span>params<span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token literal-property property\">page<\\/span><span class=\"token operator\">:<\\/span> <span class=\"token number\">1<\\/span><span class=\"token punctuation\">}<\\/span><span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        First Page\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Paginator<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>âœ¨ Learn more about <a href=\"/routes-and-params\">context <code>params<\\/code><\\/a>.<\\/p>\n<\\/blockquote>\n<blockquote>\n<p>ðŸ’¡ If you do not declare a source to the event, Nullstack will inject a <code>source={this}<\\/code> at transpile time in order to completely skip the runtime lookup process!<\\/p>\n<\\/blockquote>\n<h2 id=\"event-context\"><a href=\"#event-context\">Event Context<\\/a><\\/h2><p>The context of the event is a spread of the Nullstack client context, the component context, and the props of the element that generated the event<\\/p>\n<pre><code class=\"language-tsx\"><span class=\"token keyword\">import<\\/span> Nullstack<span class=\"token punctuation\">,<\\/span> <span class=\"token punctuation\">{<\\/span> NullstackClientContext <span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">interface<\\/span> <span class=\"token class-name\">CounterProps<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token literal-property property\">multiplier<\\/span><span class=\"token operator\">:<\\/span> number \n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">interface<\\/span> <span class=\"token class-name\">CounterIncrementProps<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token literal-property property\">delta<\\/span><span class=\"token operator\">:<\\/span> number\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">CounterProps<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  count <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span>\n\n  <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> delta<span class=\"token punctuation\">,<\\/span> multiplier <span class=\"token punctuation\">}<\\/span><span class=\"token operator\">:<\\/span> NullstackClientContext<span class=\"token operator\">&lt;<\\/span>CounterProps <span class=\"token operator\">&amp;<\\/span> CounterIncrementProps<span class=\"token operator\">><\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count <span class=\"token operator\">+=<\\/span> delta <span class=\"token operator\">*<\\/span> multiplier<span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>increment<span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token attr-name\">delta<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token number\">2<\\/span><span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">}<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>ðŸ’¡ Any attribute with primitive value will be added to the DOM.<\\/p>\n<\\/blockquote>\n<blockquote>\n<p>âœ¨ Consider using <a href=\"/context-data\"><code>data<\\/code> attributes<\\/a> to make your html valid.<\\/p>\n<\\/blockquote>\n<h2 id=\"original-event\"><a href=\"#original-event\">Original Event<\\/a><\\/h2><p>The browser default behavior is prevented by default.<\\/p>\n<p>You can opt-out of this by declaring a <code>default<\\/code> attribute to the event element.<\\/p>\n<p>A reference to the original event is always merged with the function context.<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Form<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token function\">submit<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> event <span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    event<span class=\"token punctuation\">.<\\/span><span class=\"token function\">preventDefault<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>form<\\/span> <span class=\"token attr-name\">onsubmit<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>submit<span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token attr-name\">default<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span> Submit <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>form<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Form<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"debounced-events\"><a href=\"#debounced-events\">Debounced Events<\\/a><\\/h2><p>You can use the attribute <code>debounce<\\/code> passing a number of miliseconds to delay the events of that element<\\/p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import<\\/span> Nullstack <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span> <span class=\"token punctuation\">{<\\/span>\n  \n  count <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span>\n\n  <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token operator\">++<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>increment<span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token attr-name\">debounce<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token number\">2000<\\/span><span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        increment \n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"typescript\"><a href=\"#typescript\">TypeScript<\\/a><\\/h2><p>Stateful Components accept a generic that reflect in the props that its tag will accept<\\/p>\n<pre><code class=\"language-tsx\"><span class=\"token comment\">// src/Counter.tsx<\\/span>\n<span class=\"token keyword\">import<\\/span> Nullstack<span class=\"token punctuation\">,<\\/span> <span class=\"token punctuation\">{<\\/span> NullstackClientContext <span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">interface<\\/span> <span class=\"token class-name\">CounterProps<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token literal-property property\">multiplier<\\/span><span class=\"token operator\">:<\\/span> number \n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">CounterProps<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  <span class=\"token comment\">// ...<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">{<\\/span> multiplier <span class=\"token punctuation\">}<\\/span><span class=\"token operator\">:<\\/span> NullstackClientContext<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">CounterProps<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span> <span class=\"token punctuation\">{<\\/span>multiplier<span class=\"token punctuation\">}<\\/span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<pre><code class=\"language-tsx\"><span class=\"token comment\">// src/Application.tsx<\\/span>\n<span class=\"token keyword\">import<\\/span> Counter <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'./Counter'<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> <span class=\"token keyword\">function<\\/span> <span class=\"token function\">Application<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token keyword\">return<\\/span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">Counter<\\/span><\\/span> <span class=\"token attr-name\">multiplier<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token number\">4<\\/span><span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token punctuation\">/><\\/span><\\/span>\n<span class=\"token punctuation\">}<\\/span>\n<\\/code><\\/pre>\n<h2 id=\"inner-components\"><a href=\"#inner-components\">Inner components<\\/a><\\/h2><p>Instead of creating a new component just to organize code-splitting, you can create an inner component.<\\/p>\n<p>Inner components are any method that the name starts with <code>render<\\/code> followed by an uppercase character.<\\/p>\n<p>Inner components share the same instance and scope as the main component, therefore, are very convenient to avoid problems like props drilling.<\\/p>\n<p>To invoke the inner component use a JSX tag with the method name without the <code>render<\\/code> prefix.<\\/p>\n<pre><code class=\"language-tsx\"><span class=\"token keyword\">import<\\/span> Nullstack<span class=\"token punctuation\">,<\\/span> <span class=\"token punctuation\">{<\\/span> NullstackClientContext<span class=\"token punctuation\">,<\\/span> NullstackNode <span class=\"token punctuation\">}<\\/span> <span class=\"token keyword\">from<\\/span> <span class=\"token string\">'nullstack'<\\/span><span class=\"token punctuation\">;<\\/span>\n\n<span class=\"token keyword\">interface<\\/span> <span class=\"token class-name\">CounterProps<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token literal-property property\">multiplier<\\/span><span class=\"token operator\">:<\\/span> number \n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">interface<\\/span> <span class=\"token class-name\">CounterButtonProps<\\/span> <span class=\"token punctuation\">{<\\/span>\n  <span class=\"token literal-property property\">delta<\\/span><span class=\"token operator\">:<\\/span> number\n<span class=\"token punctuation\">}<\\/span>\n\ndeclare <span class=\"token keyword\">function<\\/span> <span class=\"token function\">Button<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token literal-property property\">context<\\/span><span class=\"token operator\">:<\\/span> CounterProps<\\/span><span class=\"token punctuation\">)<\\/span><span class=\"token operator\">:<\\/span> NullstackNode\n\n<span class=\"token keyword\">class<\\/span> <span class=\"token class-name\">Counter<\\/span> <span class=\"token keyword\">extends<\\/span> <span class=\"token class-name\">Nullstack<\\/span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">CounterProps<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> <span class=\"token punctuation\">{<\\/span>\n\n  count <span class=\"token operator\">=<\\/span> <span class=\"token number\">0<\\/span><span class=\"token punctuation\">;<\\/span>\n\n  <span class=\"token function\">increment<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> delta<span class=\"token punctuation\">,<\\/span> multiplier <span class=\"token punctuation\">}<\\/span><span class=\"token operator\">:<\\/span> NullstackClientContext<span class=\"token operator\">&lt;<\\/span>CounterProps <span class=\"token operator\">&amp;<\\/span> CounterButtonProps<span class=\"token operator\">><\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count <span class=\"token operator\">+=<\\/span> delta <span class=\"token operator\">*<\\/span> multiplier<span class=\"token punctuation\">;<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n  <span class=\"token function\">renderButton<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token parameter\"><span class=\"token punctuation\">{<\\/span> delta <span class=\"token operator\">=<\\/span> <span class=\"token number\">1<\\/span> <span class=\"token punctuation\">}<\\/span><span class=\"token operator\">:<\\/span> NullstackClientContext<span class=\"token operator\">&lt;<\\/span>CounterProps <span class=\"token operator\">&amp;<\\/span> CounterButtonProps<span class=\"token operator\">><\\/span><\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>button<\\/span> <span class=\"token attr-name\">onclick<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>increment<span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token attr-name\">delta<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span>delta<span class=\"token punctuation\">}<\\/span><\\/span><span class=\"token punctuation\">><\\/span><\\/span> \n        <span class=\"token punctuation\">{<\\/span><span class=\"token keyword\">this<\\/span><span class=\"token punctuation\">.<\\/span>count<span class=\"token punctuation\">}<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>button<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n  \n  <span class=\"token function\">render<\\/span><span class=\"token punctuation\">(<\\/span><span class=\"token punctuation\">)<\\/span> <span class=\"token punctuation\">{<\\/span>\n    <span class=\"token keyword\">return<\\/span> <span class=\"token punctuation\">(<\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">Button<\\/span><\\/span> <span class=\"token punctuation\">/><\\/span><\\/span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;<\\/span><span class=\"token class-name\">Button<\\/span><\\/span> <span class=\"token attr-name\">delta<\\/span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=<\\/span><span class=\"token punctuation\">{<\\/span><span class=\"token number\">2<\\/span><span class=\"token punctuation\">}<\\/span><\\/span> <span class=\"token punctuation\">/><\\/span><\\/span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/<\\/span>div<\\/span><span class=\"token punctuation\">><\\/span><\\/span>\n    <span class=\"token punctuation\">)<\\/span>\n  <span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token punctuation\">}<\\/span>\n\n<span class=\"token keyword\">export<\\/span> <span class=\"token keyword\">default<\\/span> Counter<span class=\"token punctuation\">;<\\/span>\n<\\/code><\\/pre>\n<blockquote>\n<p>ðŸ’¡ Nullstack will inject a constant reference to the function at transpile time in order to completely skip the runtime lookup process!<\\/p>\n<\\/blockquote>\n","persistent":true,"locale":"en-US","i18n":{"lead":"Have any questions or suggestions?","cta":"Join our Discord","next":"Next Step","learn":"Learn more about"},"description":"A productive full stack web framework should not force you to think about framework details","topics":[{"title":"About Nullstack","links":[{"title":"What is Nullstack?","href":"/what-is-nullstack"},{"title":"Getting started","href":"/getting-started"}]},{"title":"Core Features","links":[{"title":"Stateless Components","href":"/stateless-components"},{"title":"Stateful components","href":"/stateful-components"},{"title":"Full stack lifecycle","href":"/full-stack-lifecycle"},{"title":"Server functions","href":"/server-functions"},{"title":"Context","href":"/context"},{"title":"Two-way bindings","href":"/two-way-bindings"},{"title":"JSX elements","href":"/jsx-elements"},{"title":"Refs","href":"/refs"},{"title":"Styles","href":"/styles"},{"title":"Persistent Components","href":"/persistent-components"}]},{"title":"Context Keys","links":[{"title":"Routes and params","href":"/routes-and-params"},{"title":"Context data","href":"/context-data"},{"title":"Context instances","href":"/context-instances"},{"title":"Context environment","href":"/context-environment"},{"title":"Context page","href":"/context-page"},{"title":"Context project","href":"/context-project"},{"title":"Context settings","href":"/context-settings"},{"title":"Context secrets","href":"/context-secrets"},{"title":"Server request and response","href":"/server-request-and-response"},{"title":"Service Worker","href":"/service-worker"}]},{"title":"Advanced concepts","links":[{"title":"Proxy","href":"/proxy"},{"title":"Application Startup","href":"/application-startup"},{"title":"Script runner","href":"/script-runner"},{"title":"How to customize Webpack","href":"/how-to-customize-webpack"},{"title":"Transpilation and Security","href":"/transpilation-and-security"},{"title":"TypeScript","href":"/typescript"}]},{"title":"Build Modes","links":[{"title":"Server-side rendering","href":"/server-side-rendering"},{"title":"Static site generation","href":"/static-site-generation"},{"title":"Single page applications","href":"/single-page-applications"}]},{"title":"Other","links":[{"title":"Nullstack Logo","href":"/nullstack-logo"},{"title":"How to deploy","href":"/how-to-deploy-a-nullstack-application"}]}]},"GoogleAnalytics/0-0-0-19":{"persistent":false},"Loader/0-0-0-21":{"persistent":false},"Footer/0-0-0-22":{"persistent":false,"locale":"en-US","i18n":{"links":[{"title":"YouTube","href":"https://www.youtube.com/channel/UCUNPaxoppH3lu6JTrUX78Ww"},{"title":"Twitter","href":"https://twitter.com/nullstackapp"},{"title":"GitHub","href":"https://github.com/nullstack"}],"star":{"story":"Want to show your love and help us spread the word?","action":"Leave a star on GitHub"}}}},"page":{"image":"/image-1200x630.png","status":200,"locale":"en-US","title":"Stateful Components - Nullstack","description":"A productive full stack web framework should not force you to think about framework details"}}